https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures/intermediate-algorithm-scripting/sum-all-odd-fibonacci-numbers

Intermediate Algorithm Scripting: Sum All Odd Fibonacci Numbers

Given a positive integer num, return the sum of all odd Fibonacci numbers that are less than or equal to num.

The first two numbers in the Fibonacci sequence are 1 and 1. Every additional number in the sequence is the sum of the two previous numbers. The first six numbers of the Fibonacci sequence are 1, 1, 2, 3, 5 and 8.

For example, sumFibs(10) should return 10 because all odd Fibonacci numbers less than or equal to 10 are 1, 1, 3, and 5.
Passed

sumFibs(1) should return a number.
Passed

sumFibs(1000) should return 1785.
Passed

sumFibs(4000000) should return 4613732.
Passed

sumFibs(4) should return 5.
Passed

sumFibs(75024) should return 60696.
Passed

sumFibs(75025) should return 135721

Answer:

function sumFibs(num) {
  let fib = [1, 1];
  let count = 0;
  let fibNum;
  
  while(num > count) {
    fibNum = fib[count] + fib[count + 1];
    if(fibNum <= num) {
      fib.push(fibNum);
    }
    count++;
  }
  return fib.filter(n => n % 2 !== 0).reduce((a, b) => a + b);
}

sumFibs(4);
